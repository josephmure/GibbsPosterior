// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppGSL.h>
#include <Rcpp.h>

using namespace Rcpp;

// GibbsPosteriorC
Rcpp::List GibbsPosteriorC(int dimension, double regularite, int nb_points_a_generer, int iterations, double sd_instrum, int nb_fonctionsTendance, unsigned long int random_seed, std::vector<std::string> words, RcppGSL::matrix<double> planXP, RcppGSL::vector<double> observations, RcppGSL::matrix<double> tendanceR, RcppGSL::vector<double> point_posterior_depart);
RcppExport SEXP GibbsPosterior_GibbsPosteriorC(SEXP dimensionSEXP, SEXP regulariteSEXP, SEXP nb_points_a_genererSEXP, SEXP iterationsSEXP, SEXP sd_instrumSEXP, SEXP nb_fonctionsTendanceSEXP, SEXP random_seedSEXP, SEXP wordsSEXP, SEXP planXPSEXP, SEXP observationsSEXP, SEXP tendanceRSEXP, SEXP point_posterior_departSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type dimension(dimensionSEXP);
    Rcpp::traits::input_parameter< double >::type regularite(regulariteSEXP);
    Rcpp::traits::input_parameter< int >::type nb_points_a_generer(nb_points_a_genererSEXP);
    Rcpp::traits::input_parameter< int >::type iterations(iterationsSEXP);
    Rcpp::traits::input_parameter< double >::type sd_instrum(sd_instrumSEXP);
    Rcpp::traits::input_parameter< int >::type nb_fonctionsTendance(nb_fonctionsTendanceSEXP);
    Rcpp::traits::input_parameter< unsigned long int >::type random_seed(random_seedSEXP);
    Rcpp::traits::input_parameter< std::vector<std::string> >::type words(wordsSEXP);
    Rcpp::traits::input_parameter< RcppGSL::matrix<double> >::type planXP(planXPSEXP);
    Rcpp::traits::input_parameter< RcppGSL::vector<double> >::type observations(observationsSEXP);
    Rcpp::traits::input_parameter< RcppGSL::matrix<double> >::type tendanceR(tendanceRSEXP);
    Rcpp::traits::input_parameter< RcppGSL::vector<double> >::type point_posterior_depart(point_posterior_departSEXP);
    rcpp_result_gen = Rcpp::wrap(GibbsPosteriorC(dimension, regularite, nb_points_a_generer, iterations, sd_instrum, nb_fonctionsTendance, random_seed, words, planXP, observations, tendanceR, point_posterior_depart));
    return rcpp_result_gen;
END_RCPP
}
// quarantedeux
int quarantedeux();
RcppExport SEXP GibbsPosterior_quarantedeux() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(quarantedeux());
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"GibbsPosterior_GibbsPosteriorC", (DL_FUNC) &GibbsPosterior_GibbsPosteriorC, 12},
    {"GibbsPosterior_quarantedeux", (DL_FUNC) &GibbsPosterior_quarantedeux, 0},
    {NULL, NULL, 0}
};

RcppExport void R_init_GibbsPosterior(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
