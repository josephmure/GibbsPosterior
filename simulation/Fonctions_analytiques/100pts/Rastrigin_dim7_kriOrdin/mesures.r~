library(pscl)
library(GenSA)

#TYPE_NOYAU_MATERN <- "geometrique" #scan("type_noyau.txt", what="character")

dossier_courant <- getwd()
setwd("..")
source("Briques_these.r")
source("MaxVraisemblanceIntegree.r")
source("densKernel.r")
setwd(dossier_courant)

NOMBRE_DIMENSIONS <- scan("nombre_dimensions.txt")
REGULARITE <- read.table("regularite_vraie.txt",as.is=TRUE)$V1

MATRICE_ERREURS_PREDICTION <- NULL
MATRICE_ERREURS_PREDICTION_NORMALISEES <- NULL
MATRICE_ESTIMATIONS_SIGMA_CARRE <- NULL
MATRICE_ESTIMATIONS_BETA <- NULL
MATRICE_FREQUENCES_APPARTIENT_INTERVALLE_PARI <- NULL
#VECTEUR_FREQUENCE_APPARTIENT_INTERVALLE_PARI_BAYESIEN <- NULL
MATRICE_LONGUEURS_MOYENNES_INTERVALLES_PARI <- NULL
MATRICE_LONGUEURS_MOYENNES_INTERVALLES_PARI_NORMALISEES <- NULL

TEMPS_RECUIT <- 10
TYPE_NOYAU_MATERN_TYPE_PRIOR <- scan("type_noyau_prior.txt", what="character")
TYPE_NOYAU_MATERN <- TYPE_NOYAU_MATERN_TYPE_PRIOR[1]

if(TYPE_NOYAU_MATERN == "geometrique")
{
	LISTE_ECHANTILLONS_POSTERIOR<-as.matrix(read.table("Posterior_anis_geom.txt", as.is=TRUE))
}

if (TYPE_NOYAU_MATERN == "tensorise")
{
	LISTE_ECHANTILLONS_POSTERIOR<-as.matrix(read.table("Posterior_tens.txt", as.is=TRUE))
}


VECTEUR_GERMES_ALEATOIRES <- scan("liste_germes_aleatoires.txt")
#LISTE_MLE <- as.matrix(read.table("../MLE.txt", as.is=TRUE))
#LISTE_MAP <- as.matrix(read.table("../MAP.txt", as.is=TRUE))
#LISTE_ECHANTILLONS_POSTERIOR <- as.matrix(read.table("../matrice_echantillons_posterior.txt"))
TAILLE_ECHANTILLON_POSTERIOR <- nrow(LISTE_ECHANTILLONS_POSTERIOR) / length(VECTEUR_GERMES_ALEATOIRES)

x_connus <- as.matrix(read.table("planXP.txt", as.is = TRUE))
y_connus <- scan("observations.txt")
tendance <- as.matrix(read.table("tendance.txt", as.is = TRUE))

source("fonctions.r")

for(numero_germe_aleatoire in 1:length(VECTEUR_GERMES_ALEATOIRES))
{
    
    germe_aleatoire <- VECTEUR_GERMES_ALEATOIRES[numero_germe_aleatoire]
    #source("../../genereObservations.r")
    # A ETE DEJA TRAITE source("postTraitement.r")
    
    #argmax_vraisemblance_integree <- LISTE_MLE[numero_germe_aleatoire,]
    #mode_posterior <- LISTE_MAP[numero_germe_aleatoire,]
    #write.matrix(argmax_vraisemblance_integree ,"argmax_vraisemblance_integree.txt",sep = "\t")
    #write.matrix(mode_posterior, "mode_posterior.txt",sep = "\t")

	ECHANTILLON_POSTERIOR <- LISTE_ECHANTILLONS_POSTERIOR[(1+(numero_germe_aleatoire-1)*TAILLE_ECHANTILLON_POSTERIOR):(numero_germe_aleatoire*TAILLE_ECHANTILLON_POSTERIOR),]

	Indices_selectionnes <- 10* (1:(TAILLE_ECHANTILLON_POSTERIOR/10))
	ECHANTILLON_POSTERIOR <- ECHANTILLON_POSTERIOR[Indices_selectionnes,]

    source("compareResultats.r")



	MATRICE_ERREURS_PREDICTION <- rbind(MATRICE_ERREURS_PREDICTION, Ecart_prediction )
    write.matrix(MATRICE_ERREURS_PREDICTION,"matrice_ecarts_predictions.txt",sep = "\t")

	MATRICE_ERREURS_PREDICTION_NORMALISEES <- rbind(MATRICE_ERREURS_PREDICTION_NORMALISEES, Ecart_prediction_normalise )
    write.matrix(MATRICE_ERREURS_PREDICTION_NORMALISEES,"matrice_ecarts_predictions_normalises.txt",sep = "\t")

	MATRICE_ESTIMATIONS_SIGMA_CARRE <- rbind(MATRICE_ESTIMATIONS_SIGMA_CARRE, Estimations_sigma_carre )
    write.matrix(MATRICE_ESTIMATIONS_SIGMA_CARRE,"matrice_estimations_sigma_carre.txt",sep = "\t")

	MATRICE_ESTIMATIONS_BETA <- rbind(MATRICE_ESTIMATIONS_BETA, Estimations_beta )
    write.matrix(MATRICE_ESTIMATIONS_BETA,"matrice_estimations_beta.txt",sep = "\t")

    MATRICE_FREQUENCES_APPARTIENT_INTERVALLE_PARI <- rbind(MATRICE_FREQUENCES_APPARTIENT_INTERVALLE_PARI, Frequences_appartient_intervalle_pari )
    write.matrix(MATRICE_FREQUENCES_APPARTIENT_INTERVALLE_PARI, "matrice_frequences_appartient_intervalle_pari.txt", sep = "\t")

	MATRICE_LONGUEURS_MOYENNES_INTERVALLES_PARI <- rbind(MATRICE_LONGUEURS_MOYENNES_INTERVALLES_PARI,  Longueurs_moyennes_intervalles_pari )
	write.matrix(MATRICE_LONGUEURS_MOYENNES_INTERVALLES_PARI, "matrice_longueurs_moyennes_intervalles_pari.txt", sep = "\t")

	MATRICE_LONGUEURS_MOYENNES_INTERVALLES_PARI_NORMALISEES <- rbind(MATRICE_LONGUEURS_MOYENNES_INTERVALLES_PARI_NORMALISEES,  Longueurs_moyennes_intervalles_pari_normalisees )
	write.matrix(MATRICE_LONGUEURS_MOYENNES_INTERVALLES_PARI_NORMALISEES , "matrice_longueurs_moyennes_intervalles_pari_normalisees.txt", sep = "\t")
}
